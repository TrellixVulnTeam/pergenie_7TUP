<IfModule mod_ssl.c>

    Listen 443 https

    ##  SSL Global Context
    SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog
    SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
    SSLSessionCacheTimeout  300
    SSLRandomSeed startup file:/dev/urandom  256
    SSLRandomSeed connect builtin
    SSLCryptoDevice builtin

    ## SSL Virtual Host Context
    <VirtualHost _default_:443>
        ErrorLog logs/ssl_error_log
        TransferLog logs/ssl_access_log
        LogLevel warn

        SSLEngine on
        SSLProtocol all -SSLv2
        SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5
        SSLCertificateFile {{ ssl_crt_file_path }}
        SSLCertificateKeyFile {{ ssl_key_file_path }}

        # SSL Engine Options
        <Files ~ "wsgi.py$">
            SSLOptions +StdEnvVars
        </Files>
        <Directory "{{ wsgi_dir }}">
            SSLOptions +StdEnvVars
        </Directory>

        # SSL Protocol Adjustments
        BrowserMatch "MSIE [2-5]" \
                 nokeepalive ssl-unclean-shutdown \
                 downgrade-1.0 force-response-1.0

        # Per-Server Logging
        CustomLog logs/ssl_request_log \
                  "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

        </VirtualHost>

    # Redirect http to https
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}

    # FIXME: avoid hardcoding of stating.pergenie.org
    # Redirect www to non-www
    # RewriteCond %{HTTP_HOST} ^www\.staging\.pergenie\.org [NC]
    # RewriteRule ^(.*)$ https://staging.pergenie.org/$1 [L,R=301]

</IfModule>
